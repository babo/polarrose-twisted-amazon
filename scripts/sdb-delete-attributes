#!/usr/bin/env python

import sys, os

from twisted.python import log
from twisted.internet import reactor
from twisted.web import client
from twisted.internet import defer, task
from twisted.internet import reactor

from polarrose.amazon.sdb import SimpleDatabaseService

if __name__ == "__main__":

    def printResult(response):
        if not response.success:
            print "The request failed with the following errors:"
            for code,message in response.errors.iteritems():
                print " %s - %s" % (code, message)
            print "(RequestId = %s)" % response.requestId
        reactor.stop()

    def printError(failure):
        print "failure: " + str(failure)
        reactor.stop()

    # sds-delete-attributes <domain> <item> [attribute[=value] [attribute[=value]]*]

    attributes = {}
    for a in sys.argv[3:]:
        if '=' in a:
            k,v = a.split('=')
            if attributes.has_key(k):
                attributes[k].append(v)
            else:
                attributes[k] = [v]
        else:
            attributes[a] = None

    print attributes
                    
    service = SimpleDatabaseService(key = os.environ.get("AWS_KEY"), secret = os.environ.get("AWS_SECRET"))
    service.deleteAttributes(sys.argv[1], sys.argv[2], attributes).addCallback(printResult).addErrback(printError)
    reactor.run()
    
